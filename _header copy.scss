@use '../global' as *;


// ヘッダー ========================
.header {
    position: fixed;
    z-index: 100;
    inset-block-start: 0;
    inset-inline-start: 0;
    inline-size: 100%;
    block-size: rclamp(60, 80, 375, 1280);
    background: $bg-primary;
    box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.16);
  }
  .header__inner {
    // display: grid;
    // grid-template-columns: 100px 1fr;
    padding-inline-start:  rclamp(20, 40, 375, 1280);
    padding-inline-end: rclamp(17, 40, 375, 1280);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .header__logo {
    padding-block: rclamp(15, 20, 375, 1280);
  }
  
  .header__logo-link {
    inline-size: rem(270);
  }
  
  .header__nav {
    // spの場合非表示
    display: none;
    align-items: center;
    justify-content: center;
    @include mq(md) {
      display: flex;
    }
  }
  
  .header__nav-list {
    display: flex;
    gap: rclamp(12, 24, 768, 1280);
    padding-block: rclamp(12, 18, 375, 1280);
    
    @include mq(xl) {
    }
  }
  
  
  
  
  .header__nav-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative; // 下線のために必要
    transition: all 0.3s ease;
    color: inherit;
    padding-block: 3px;
    text-align: center; // アイコンを中央に配置
  
    &::after {
      content: '';
      position: absolute;
      bottom: -5px; // アイコンの下に表示
      left: 50%;
      translate: -50%;
      width: 20px; // アイコンと同じ幅
      height: 3px;
      background-color: currentColor; // テキストと同じ色
      transform: scaleX(0); // 初期状態では非表示
      transform-origin: center;
      transition: transform 0.3s ease; // アニメーション
    }
  
    // ホバー時
    &:hover {
      color: $text-link; // ホバー時の色変更（リンク自体の色）
  
      svg {
        path {
          fill: currentColor; // svgのpath色も親要素の色を継承
        }
      }
  
      &::after {
        transform: scaleX(1); // 下線を表示
      }
    }
  
    // アクティブ状態でも下線を表示
    &.active {
      color: $text-link; // アクティブなリンクの色変更（リンク自体の色）
  
      svg {
        path {
          fill: currentColor; // svgのpath色も親要素の色を継承
        }
      }
  
      &::after {
        transform: scaleX(1); // アクティブ時も下線表示
      }
    }
  }
  
  
  
  
    // // アクティブ・現在ページ
    // &.is-active,
    // &[aria-current="page"] {
    //   color: $text-link;
  
    //   &::after {
    //     transform: scaleX(1);
    //   }
    // }
  
  // // ホバーは hover 対応デバイスに限定
  // @media (any-hover: hover) {
  //   .header__nav-link:hover {
  //     color: $text-link;
  
  //     &::after {
  //       transform: scaleX(1);
  //       transform-origin: center;
  //       transition: transform 0.3s linear;
  //     }
  
  //     // .header__nav-link-icon {
  //     //   transform: scale(1.5) translateY(-4px); // ✅ 20%拡大して上に移動
  //     //   transform-origin: bottom center; // ✅ 基準を下に
  //     //   transition: transform 0.3s ease-in-out; // ✅ なめらかに変化
  //     // }
  
  //     // // ✅ テキストも拡大
  //     // .header__nav-item-text {
  //     //   transform: scale(1.5) translateY(-2px); // ✅ 10%拡大して上に移動
  //     //   transform-origin: bottom center; // ✅ 基準を下に
  //     //   transition: transform 0.3s ease-in-out;
  //     // }
  // }
  //   }
  
  // ✅ SVGアイコンの初期スタイル
  .header__nav-link-icon {
    // transition: transform 0.3s ease-in-out;
  }
  
  // .header__nav-link-icon path {
  //   fill: currentColor;//親要素と色を合わせる
  //   // stroke: currentColor; // ✅ 線の色を親要素に合わせる
  //   // stroke-width: .8; // ✅ 線の太さ
  //   // stroke-dasharray: 0; // ✅ JSで自動セット
  //   // stroke-dashoffset: 0; // ✅ 初期値は0
  //   // transition: stroke-dashoffset 0.5s ease-in-out; // ✅ スムーズに線をなぞる
  // }
  
  // // ✅ ホバー時にSVGパスのみなぞる
  // @media (any-hover: hover) {
  //   .header__nav-link:hover {
  //     .header__nav-link-icon path {
  //       stroke-dashoffset: 0; // ✅ ホバー時になぞる
  //     }
  //   }
  // }
  
  .header__nav-item-text {
    text-align: center;
    font-size: rem(11);
    font-weight: 700;
    line-height: rem(18); /* 163.636% */
    color: inherit;
    transition: transform 0.3s ease-in-out; // ✅ スムーズな変化
    @include mq(lg) {
      margin-block-start: 2px;
    }
  }
  
  .header__suv-list {
    display: none;
    @include mq(xl) {
      display: block;
      margin-inline-start: rem(32);
      padding-block: rem(9);
    }
  }
  
  .header__suv-item-text {
    color: #393939;
    font-size: rem(12);
    font-weight: 500;
    text-align: right;
  }
  
  .header__suv-list {
  
  }
  
  .header__suv-item-text {
  
  }
  
  .header__suv-item {
    display: flex;
    gap: rem(6);
    color: #1391E6;
    text-align: center;
    font-size: rem(32);
    font-weight: 700;
    letter-spacing: -0.64px;
  }
  
  .header__suv-item-icon {
  
  }
  
  .header__btn {
    transition: all 0.3s ease;
  
    @media(any-hover: hover) {
      &:hover {
  
      }
    }
  }
  
  // アイコン ====================
  .drawer-icon {
    position: fixed;
    z-index: 102;
    inset-block-start: 22px;
    inset-inline-end: 14px;
    inline-size: 27px;
    block-size: 27px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 5px;
    background: transparent;
    border: transparent;
    cursor: pointer;
  
    @include mq(md) {
      display: none;
    }
  
  }
  
  .drawer-icon__bar {
    inline-size: 27px;
    block-size: 2px;
    background: $btn-primary;
    border-radius: 1px;
    transition:
    transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55),
    opacity 0.3s ease,
    background-color 0.3s ease,
    scale 0.3s ease;
    transform-origin: center center;
  }
  
  // メニューが開いている時 ========
  .drawer-icon.js-show {
    .drawer-icon__bar:nth-of-type(1) {
      transform: translate(2px, 7px) rotate(45deg);
    }
    .drawer-icon__bar:nth-of-type(2) {
      opacity: 0; // display: none; ではなく、フェードアウトするように変更
    }
    .drawer-icon__bar:nth-of-type(3) {
      transform: translate(2px, -7px) rotate(-45deg);
    }
  }
  
  // メニューが開いた時のアイコン色変更
  .drawer-icon.js-show .drawer-icon__bar {
    background: $btn-secondary;
  }
  
  // ドロワーメニュー ==========================
  .drawer {
    position: fixed;
    z-index: 101;
    inset-block-start: 0;
    inset-inline-end: 0;
    inline-size: 100%;
    block-size: 100svh;
    background: $hover-accent;
    transform: translateX(100%);
  }
  
  .drawer.js-show {
  }
  
  .drawer__content {
    inline-size: 100%;
    block-size: fit-content;
    padding-block: rclamp(99.5, 155, 375, 768);
    margin-inline: auto;
    position: relative;
  }
  
  .drawer__logo {
    position: absolute;
    inset-block-start: 17.78px;
    inset-inline-start: 22.94px;
    display: flex;
    gap: 11px;
  }
  
  
  .drawer__nav-list {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  
  .drawer-nav-item {
    display: flex;
    align-items: center;
    inline-size: calc(255 / 375 * 100%);
    border-block-start: 1px dashed #fff ;
  }
  
  // 最後の要素だけ `border-bottom` を適用
  .drawer-nav-item:last-child {
    border-block-end: 1px dashed #fff;
  }
  
  .drawer__item-link {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    &::after {
      content: "";
      position: absolute;
      background: url(../img/drawer-icon.svg) no-repeat center / cover;
      inline-size: rem(14);
      block-size: rem(14);
      inset-inline-end: 0;
      inset-block-start: 50%;
      transform: translateY(-50%);
      justify-content: flex-end;
    }
  }
  
  .drawer__item-text {
    margin-inline-start: rclamp(14, 24, 375, 768);
    padding-block-start: rclamp(16.5, 24.5, 375, 768);
    padding-block-end: rclamp(17.5, 25, 375, 768);
    color: $bg-primary;
    font-size: rclamp(14, 24, 375, 768);
    font-weight: 500;
  }
  
  .drawer__toggle-button {
    display: inline-block;
    padding: 0;
    background: #fff;
    border-radius: 100vmax;
  }